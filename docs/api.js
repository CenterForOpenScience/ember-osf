YUI.add("yuidoc-meta", function(Y) {
   Y.YUIDoc = { meta: {
    "classes": [
        "Analytics",
        "CasAuthenticatedRouteMixin",
        "Citation",
        "Collection",
        "Comment",
        "CommentReport",
        "CommentableMixin",
        "Contributor",
        "DraftRegistration",
        "File",
        "FileCacheBypassMixin",
        "FileItemMixin",
        "FileProvider",
        "FileVersion",
        "GenericDataADapter",
        "HostAppNameMixin",
        "InfinityCustomMixin",
        "Institution",
        "Log",
        "Metaschema",
        "Node",
        "NodeActionsMixin",
        "NodeLink",
        "OsfAdapter",
        "OsfAgnosticAuthController",
        "OsfAgnosticAuthRoute",
        "OsfCookieAuthenticator",
        "OsfCookieAuthorizer",
        "OsfCookieLoginController",
        "OsfCookieLoginRoute",
        "OsfModel",
        "OsfSerializer",
        "OsfTokenAuthenticator",
        "OsfTokenAuthorizer",
        "OsfTokenLoginControllerMixin",
        "OsfTokenLoginRouteMixin",
        "PaginatedControllerMixin",
        "PaginatedRouteMixin",
        "Preprint",
        "Registration",
        "RegistrationActionsMixin",
        "TaggableMixin",
        "Taxonomy",
        "User",
        "ajax-helpers",
        "auth",
        "author-link",
        "buildSecondaryNavLinks",
        "citation-widget",
        "comment-detail",
        "comment-form",
        "comment-pane",
        "current-user",
        "discover-page",
        "dropzone-widget",
        "elastic-query",
        "elem-id",
        "eosf-project-nav",
        "faceted-search",
        "file-browser",
        "file-browser-icon",
        "file-chooser component",
        "file-manager",
        "file-renderer",
        "file-version",
        "file-widget",
        "filterReplace",
        "fix-special-char",
        "fix-special-char-helper",
        "fixstring",
        "getDisplayName",
        "ifFilter",
        "license-picker",
        "navbar-auth-dropdown",
        "new-navbar-auth-dropdown",
        "oauth-popup",
        "osf-copyright",
        "osf-footer",
        "osf-mode-footer",
        "osf-navbar",
        "osf-paginator",
        "osf-services",
        "pagination-control",
        "permissions",
        "providerRegex",
        "search-dropdown",
        "search-facet-daterange",
        "search-facet-language",
        "search-facet-locked",
        "search-facet-source",
        "search-facet-typeahead",
        "search-facet-worktype",
        "search-facet-worktype-button",
        "search-facet-worktype-hierarchy",
        "search-help-modal",
        "search-result",
        "service-links",
        "sign-up",
        "sortOptionDisplay",
        "tags-widget",
        "theme",
        "total-share-results"
    ],
    "modules": [
        "adapters",
        "authenticators",
        "authorizers",
        "components",
        "const",
        "ember-osf",
        "helpers",
        "mixins",
        "models",
        "serializers",
        "services",
        "transforms",
        "utils"
    ],
    "allModules": [
        {
            "displayName": "adapters",
            "name": "adapters",
            "description": "Adapters that control how the addon communicates with the OSF"
        },
        {
            "displayName": "authenticators",
            "name": "authenticators",
            "description": "Support various forms of authentication to the OSF, such as `token` and `cookie`"
        },
        {
            "displayName": "authorizers",
            "name": "authorizers",
            "description": "Support sending authorized requests to the OSF via various means"
        },
        {
            "displayName": "components",
            "name": "components",
            "description": "Reusable UI elements"
        },
        {
            "displayName": "const",
            "name": "const",
            "description": "Predefined constants that are frequently referenced"
        },
        {
            "displayName": "ember-osf",
            "name": "ember-osf",
            "description": "Reusable ember models and components for interacting with the Open Science Framework"
        },
        {
            "displayName": "helpers",
            "name": "helpers",
            "description": "Handlebars template helpers"
        },
        {
            "displayName": "mixins",
            "name": "mixins",
            "description": "Reusable logic that can be added to routes, controllers, or components"
        },
        {
            "displayName": "models",
            "name": "models",
            "description": "Ember-data models for interacting with the OSF APIv2"
        },
        {
            "displayName": "serializers",
            "name": "serializers",
            "description": "Ember-data serializer logic that governs how data passes to or from the server"
        },
        {
            "displayName": "services",
            "name": "services",
            "description": "Manage behaviors that require coordinating shared state or namespaced logic across the application"
        },
        {
            "displayName": "transforms",
            "name": "transforms",
            "description": "Control how ember-data serializes and deserializes fields"
        },
        {
            "displayName": "utils",
            "name": "utils",
            "description": "Helper functions for asynchronous behavior"
        }
    ],
    "elements": []
} };
});